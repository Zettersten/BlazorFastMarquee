name: Deploy Demo to GitHub Pages

# IMPORTANT: Before this workflow can succeed, you must:
# 1. Go to Repository Settings ‚Üí Pages
# 2. Under "Build and deployment" ‚Üí "Source"
# 3. Select "GitHub Actions"
# Without this configuration, the deployment will fail with a 404 error.

on:
  push:
    branches: [ "main", "master" ]
    paths:
      - 'samples/BlazorFastMarquee.Demo/**'
      - 'Components/**'
      - 'wwwroot/**'
      - '*.cs'
      - '*.razor'
      - 'BlazorFastMarquee.csproj'
      - '.github/workflows/deploy-demo.yml'
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: Restore dependencies
      run: dotnet restore samples/BlazorFastMarquee.Demo/BlazorFastMarquee.Demo.csproj
      
    - name: Build library
      run: dotnet build BlazorFastMarquee.csproj --configuration Release --no-restore
      
    - name: Publish WASM app
      run: |
        dotnet publish samples/BlazorFastMarquee.Demo/BlazorFastMarquee.Demo.csproj -c Release -o output
        echo "‚úÖ Published to: output/wwwroot"
        ls -la output/wwwroot
      
    - name: Update base path for GitHub Pages
      run: |
        # Update base href for GitHub Pages (repo name will be the path)
        REPO_NAME="${GITHUB_REPOSITORY#*/}"
        echo "üìù Updating base href to /${REPO_NAME}/"
        sed -i "s|<base href=\"/\" />|<base href=\"/${REPO_NAME}/\" />|g" output/wwwroot/index.html
        sed -i "s|<base href=\"/\">|<base href=\"/${REPO_NAME}/\">|g" output/wwwroot/index.html
        echo "‚úÖ Base href updated in index.html"
        grep "base href" output/wwwroot/index.html
        echo ""
        echo "üìù Note: 404.html uses dynamic path detection and doesn't need updating"
        
    - name: Verify build output
      run: |
        echo "üì¶ Checking build artifacts..."
        if [ ! -f "output/wwwroot/index.html" ]; then
          echo "‚ùå Error: index.html not found!"
          exit 1
        fi
        if [ ! -f "output/wwwroot/.nojekyll" ]; then
          echo "‚ö†Ô∏è  Warning: .nojekyll not found, creating it..."
          touch output/wwwroot/.nojekyll
        fi
        if [ ! -d "output/wwwroot/_framework" ]; then
          echo "‚ùå Error: _framework directory not found!"
          exit 1
        fi
        echo "‚úÖ All required files present"
        echo ""
        echo "üìä Build output size:"
        du -sh output/wwwroot
        echo ""
        echo "üìÅ Directory structure:"
        find output/wwwroot -type f -name "*.html" -o -name "*.js" -o -name ".nojekyll" | head -20
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: output/wwwroot

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Setup Pages (info)
      run: |
        echo "üöÄ Deploying to GitHub Pages..."
        echo ""
        echo "‚ÑπÔ∏è  If this step fails with a 404 error, it means GitHub Pages is not configured."
        echo "   Please follow these steps:"
        echo "   1. Go to https://github.com/${{ github.repository }}/settings/pages"
        echo "   2. Under 'Build and deployment' ‚Üí 'Source'"
        echo "   3. Select 'GitHub Actions'"
        echo ""
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
